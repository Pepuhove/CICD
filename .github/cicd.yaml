name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to ECR
        id: login-ecr
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Docker ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.REGISTRY }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.REGISTRY }} my-app-repo:latest .

      - name: Scan Docker image with Trivy
        run: |
          trivy image ${{ secrets.REGISTRY }} my-app-repo:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.REGISTRY }} my-app-repo:latest

      - name: Run SonarQube analysis
        run: |
          sonar-scanner -Dsonar.projectKey=my-app -Dsonar.sources=. -Dsonar.host.url=${{ secrets.SONARQUBE_URL }} -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Format
        run: |
          terraform fmt -check

      - name: Terraform Init
        run: |
          terraform init

      - name: Terraform Validate
        run: |
          terraform validate

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve